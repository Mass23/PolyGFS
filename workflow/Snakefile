# Pipeline for MetaPoly
#
# Example call: snakemake -s workflow/Snakefile --configfile config/config.yaml --use-conda --conda-prefix ${CONDA_PREFIX}/pipeline --cores 1 -rpn
# Example call (esb-compute-01 or litcrit): CORES=24 snakemake -s workflow/Snakefile --configfile config/config.yaml --use-conda --conda-prefix ${CONDA_PREFIX}/pipeline --cores $CORES -rpn

##############################
# MODULES
import os, re
import glob
import pandas as pd


##############################
# CONFIG
# can be overwritten by using --configfile <path to config> when calling snakemake
# configfile: "config/config.yaml"

include:
    "rules/init.smk"


##############################
# TARGETS & RULES

# List of (main) targets to be created
TARGETS = []


# Download genomes
if "dn_genomes" in STEPS:
    include:
        "rules/dn_genomes.smk"
    TARGETS += [
        "status/dn_genomes.done"
    ]

# Annotate genomes
if "annotate_genomes" in STEPS:
    include:
        "rules/annotate_genomes.smk"
    TARGETS += [
        "status/annotate_genomes.done"
    ]

# Eukaryotes 
if "eukaryotes" in STEPS:
    include:
        "rules/eukaryotes.smk"
    TARGETS += [
        "status/eukaryotes.done"
    ]

# Bins
if "taxonomy" or "functions" or "mags" in STEPS:
    include:
        "rules/bins.smk"
    TARGETS += [
        "status/bins.done"
    ]

# Eukaryote binning
if "euk_bin" in STEPS:
    include:
        "rules/euk_bin.smk"
    TARGETS += [
        "status/euk_bin.done"
    ]

# GTDBtk + Checkm
if "taxonomy" in STEPS:
    include:
        "rules/taxonomy.smk"
    TARGETS += [
        "status/gtdbtk_checkm.done"
    ]

# Functional annotation (METABOLIC, MAGICCAVE, FUNCS, antiSMASH)
if "functions" in STEPS:
    include:
        "rules/functions.smk"
    TARGETS += [
        "status/functions.done"
    ]

# MANTIS annotation
if "mantis" in STEPS:
    include:
        "rules/mantis.smk"
    TARGETS += [
        "status/mantis.done"
    ]

# Coassembly and Binning
if "coassembly_binning" in STEPS:
    include:
        "rules/coassembly_binning.smk"
    TARGETS += [
        "status/coassembly_binning.done"
    ]

# gRodon + PopCOGent 
if "misc" in STEPS:
    include:
        "rules/misc.smk"
    TARGETS += [
        "status/misc.done"
    ]

# No targets
if len(TARGETS) == 0:
    raise Exception('You are not serious. Nothing to be done? Really?')

rule all:
    input:
        TARGETS

